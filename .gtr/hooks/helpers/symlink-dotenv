#!/bin/bash

# gtr helper: symlink-dotenv
# Creates symlinks for .env files from main worktree to new worktree
#
# Arguments:
#   $1 - main worktree path
#   $2 - target worktree path
#
# Returns:
#   Array of symlinked files via stdout (one per line)

MAIN_WORKTREE="$1"
WORKTREE_PATH="$2"

if [[ -z "$MAIN_WORKTREE" || -z "$WORKTREE_PATH" ]]; then
    echo "Error: symlink-dotenv requires main worktree and target worktree paths" >&2
    exit 1
fi

# File patterns to symlink (from config or default)
FILE_PATTERNS=(
    ".env*local*"
    ".env.*local*"
    ".claude/"
    ".anthropic/"
)

symlinked_files=()
for pattern in "${FILE_PATTERNS[@]}"; do
    if [[ "$pattern" == */ ]]; then
        # Directory pattern
        dir_name="${pattern%/}"
        if [[ -d "$MAIN_WORKTREE/$dir_name" ]]; then
            # Create symlink for directory
            if ln -sf "$MAIN_WORKTREE/$dir_name" "$WORKTREE_PATH/$dir_name" 2>/dev/null; then
                symlinked_files+=("$dir_name/")
            fi
        fi
    else
        # File pattern - use find to search recursively
        while IFS= read -r -d '' file; do
            if [[ -f "$file" ]]; then
                relative_path="${file#$MAIN_WORKTREE/}"
                target_path="$WORKTREE_PATH/$relative_path"
                target_dir_path=$(dirname "$target_path")

                # Create target directory if it doesn't exist
                mkdir -p "$target_dir_path" 2>/dev/null

                # Create symlink for file
                if ln -sf "$file" "$target_path" 2>/dev/null; then
                    symlinked_files+=("$relative_path")
                fi
            fi
        done < <(find "$MAIN_WORKTREE" -name "$pattern" -type f -print0 2>/dev/null)
    fi
done

# Output symlinked files (one per line)
for file in "${symlinked_files[@]}"; do
    echo "$file"
done
